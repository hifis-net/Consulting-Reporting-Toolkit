image: python:3.12

stages:
  - base

variables:
  POETRY_REPOSITORY: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"


.install_dependencies: &install_dependencies_anchor
  before_script:
    - pip install --upgrade pip
    - pip install poetry
    - poetry install --only main


lint:
  stage: base
  extends: .install_dependencies
  script:
    - poetry run reporting lint
  only:
    - branches
  except:
    - main

validate:
  stage: base
  extends: .install_dependencies
  script:
    - poetry run reporting validate
  only:
    - branches
  except:
    - main

publish:
  stage: base
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "main"
  script:
    - TMP=$(git log --all --decorate --oneline --graph --abbrev-commit | grep Merge | awk -F\' '{ print $2 }' | awk '!seen[$0]++ { if (NR > 1) print }' | head -n 1)
    - INITIAL_BRANCH_COMMIT=$(git log --all --decorate --oneline --graph --abbrev-commit | grep $TMP | head -n 1 | awk '{print $2}')
    - git log --all --decorate --oneline --graph --abbrev-commit
    - echo $INITIAL_BRANCH_COMMIT
    - CURRENT_VERSION=$(grep version pyproject.toml | awk -F\" '{print $2}'); echo $CURRENT_VERSION
    - PREVIOUS_VERSION=$(git show $INITIAL_BRANCH_COMMIT:pyproject.toml | grep version | awk -F\" '{print $2}'); echo $PREVIOUS_VERSION
    - if [[ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]]; then 
        pip install --upgrade pip;
        pip install poetry;
        poetry build --format wheel;
        poetry config repositories.gitlab ${POETRY_REPOSITORY};
        poetry publish --username gitlab-ci-token --password ${CI_JOB_TOKEN} --repository gitlab;
        echo "Version has changed";
      else 
        echo "Nothing published.";
      fi

